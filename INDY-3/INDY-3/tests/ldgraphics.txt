.keyboard_pos $7C00

.bgcolor_pos $8000
.tile_att_table $8800
.tile_map_table $8400
.tile_map_p2 $8500

; enable zero color on first tile attribute page and fill in some tiles.
LDA #$10
LDX #0
LDY #0
.first_page_loop
    STA tile_att_table x
    STY tile_map_table x

    DEX
    BNE first_page_loop


; Put some tiles on the second page.
LDA #$28
LDX #0
LDY #0
.second_page_loop
    STA tile_map_p2 x

    DEX
    BNE second_page_loop

; set background color to blue
LDX #2
LDA #$FF
STA bgcolor_pos x


; load the graphics

LDX #low graphics_file
LDY #high graphics_file

STX 1
STY 2

LDA #3
STA 0 ;trigger system call to load the graphics

CLC
LDA #10 ; check for success
ADC $1  ; addr 1 is $FF on failure, will trigger carry flag

BCS end_program

; load the palettes

LDX #low palette_file
LDY #high palette_file

STX 1
STY 2

LDA #2
STA 0 ;trigger system call to load the palettes

CLC
LDA #10 ; check for success
ADC $1  ; addr 1 is $FF on failure, will trigger carry flag

BCS end_program

LDA #100
STA 0 ; here goes nothing. (graphics refresh system call)

.pre_input_test

    LDA #50 ; get key input
    STA 0

    LDX #36
    LDA keyboard_pos x
    CMP #0

    BNE end_program

    LDA #14
    LDX #32 ; delay for 32 milliseconds
    LDY #0
    STX 1
    STY 2
    STA 0

    JMP pre_input_test

.end_program

LDX #hi test_printf
LDY #lo test_printf
STX 2
STY 1
LDA #254
STA 0

DEC 0
LDA #1
STA 0

.palette_file
dat "exp"
dat 0

.graphics_file
dat "exg"
dat 0

.test_printf
dat "This is a string I'd like to print."
dat 0 $5 $0102030405

