; implicit
nop
brk
rts
rti
tax
tay
txa
tya
tsx
txs
pha
pla
php
plp
sec
clc
clv
inx
iny
dex
dey
shl
shr
rol
ror

; zero page
and $00
ora $00
xor $00
bit $00

adc $00
sbc 0
cmp 0
cpx 0

inc 0
dec 0

shl 0
shr 0
rol 0
ror 0

lda 0
ldx 0
ldy 0
cpy 0

sta 0
stx 0
sty 0

; zero page, x or y
and 0 x
ora 0 x
xor 0 x

adc 0 x
sbc 0 x
cmp 0 x

inc 0 x
dec 0 x

shl 0 x
shr 0 x
rol 0 x
ror 0 x

lda 0 x
ldx 0 y
ldy 0 x

sta 0 x
stx 0 y
sty 0 x

; immediate
and #0
ora #0
xor #$0
bit #$0

adc #0
sbc #0
cmp #0
cpx #0

lda #0
ldx #$0
ldy #0
cpy #0

; relative
bcc #0
bcs #0
bne #00
beq #0
bpl #000
bmi #0
bvc #0
bvs #0

; absolute, x and y
and $FFFF x
ora $FFFF x
xor $FFFF x

adc $FFFF x
sbc $FFFF x
cmp $FFFF x

inc $FFFF x
jmp ($FFFF)
dec $FFFF x

shl $FFFF x
shr $FFFF x
rol $FFFF x
ror $FFFF x

lda $FFFF x
ldx $FFFF y
ldy $FFFF x
lda $FFFF y

sta $FFFF x
sta $FFFF y

and $FFFF y
ora $FFFF y
xor $FFFF y

adc $FFFF y
sbc $FFFF y
cmp $FFFF y

; indexed indirect and reverse
and ($00 x)
ora (0 x)
xor (0 x)
lda (0 x)

adc (0 x)
sbc (0 x)
cmp (0 x)
sta (0 x)

and (0) y
ora (0) y
xor (0) y
lda (0) y

adc (0) y
sbc (0) y
cmp (0) y
sta (0) y

; absolute
and $FFFF
ora $FFFF
xor $FFFF
bit $FFFF

adc $FFFF
sbc $FFFF
cmp $FFFF
cpx $FFFF

inc $FFFF
jmp $FFFF
dec $FFFF
jsr $FFFF

shl $FFFF
shr $FFFF
rol $FFFF
ror $FFFF

lda $FFFF
ldx $FFFF
ldy $FFFF
cpy $FFFF

sta $FFFF
stx $FFFF
sty $FFFF

; absolute branches
bcc $FFFF
bcs $FFFF
bne $FFFF
beq $FFFF
bpl $FFFF
bmi $FFFF
bvc $FFFF
bvs $FFFF














